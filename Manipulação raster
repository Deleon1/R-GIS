# Fonte dos dados: MiniCursoSPRING http://www.dpi.inpe.br/spring/portugues/manuais.html 

# Instala os pacotes necessários
install.packages("raster")
install.packages("sp")

# Carrega os pacotes necessários
library(raster)
library(sp)

# Seleciona a pasta que irá carregar e salvar os arquivos
setwd("/home/deleon/Documents/Github")

raster_in=raster("LandSatTM3.tif")
plot(raster_in)
raster_in
summary(raster_in)

# Comandos para explorar o arquivo
crs(raster_in)
values(raster_in)
minValue(raster_in)
maxValue(raster_in)
slotNames(raster_in)
raster_in@data

# Cálculos para tornar os valores do raster contínuos
raster_continuo=raster_in/maxValue(raster_in)
raster_continuo
values(raster_continuo)
summary(raster_continuo)
plot(raster_continuo)
writeRaster(raster_continuo,"raster_continuo.tif",overwrite = TRUE)

maximo_cont=maxValue(raster_continuo)
minimo_cont=minValue(raster_continuo)
amplitude_cont=maximo_cont-minimo_cont

# os valores entre min e max do raster contínuo serão distribuídos entre 2^8=256 classes (tons), de 0 a 255
raster_discreto=(255/amplitude_cont)*(raster_continuo-minimo_cont)
values(raster_discreto)
raster_discreto[]=as.integer(round(raster_discreto[]))
values(raster_discreto)
plot(raster_discreto)  
writeRaster(raster_discreto,"raster_discreto.tif",overwrite = TRUE)

# Classificaço do objeto raster_classificado para apresentar apenas os valores (10, 15, 20 e 25)
raster_classificado=raster_discreto 
plot(raster_classificado)  
raster_classificado[which(values(raster_classificado)<=20)]=10

raster_classificado[which((values(raster_classificado)>20)&
                      (values(raster_classificado)<=30))]=15

raster_classificado[which((values(raster_classificado)>30)&
                            (values(raster_classificado)<=50))]=20 

raster_classificado[which((values(raster_classificado)>50)&
                            (values(raster_classificado)<=255))]=25 

plot(raster_classificado)
values(raster_classificado)
writeRaster(raster_classificado,"raster_classificado.tif")

# Número de pixels com valor igual a 10
length(which(values(raster_discreto)==10))

# Cálculo da área ocupada pelos pixels com valor igual a 10 (pixel 30 x 30 m)
length(which(values(raster_discreto)==10))*900

# Função para cálculo do índice NDVI. Qualquer função pode ser usada.
NDVI = function(RED,NIR){
  (NIR-RED)/(NIR+RED)
  }

B3 = raster("/home/deleon/Documents/Github/LandSatTM3.tif")
B4 = raster("/home/deleon/Documents/Github/LandSatTM4.tif")

rasterNDVI = B3
rasterNDVI[]=NDVI(B3[],B4[])
plot(B3)
plot(B4)
plot(rasterNDVI)
writeRaster(rasterNDVI,"rasterNDVI.tif")

summary(rasterNDVI)
values(rasterNDVI)
